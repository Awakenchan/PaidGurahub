goofyversion = "Version: Semi ReWrote"
getgenv().SecureMode = true

local ws = game:GetService('Workspace')

if not game.Workspace.Terrain:FindFirstChild("part4farm") then
    local BuildPart = Instance.new("Part") --Directory of The Part
    BuildPart.Size = Vector3.new(250,1,250)                   --The Size of the Part
    BuildPart.Position = Vector3.new(224, -10, -62)      --The Position of The Part
    BuildPart.Anchored = true                             --Anchore The Part
    BuildPart.Parent = game.Workspace.Terrain
    game.Workspace.Terrain.Part.Name = "part4farm"
elseif game.Workspace.Terrain:FindFirstChild("part4farm") then
end

-- REMOVE THE CRINGE CLOWN UNDER THE MAP FOR THE AUTOFARM
for _,p in pairs(ws:GetChildren()) do
    if p:IsA("Part") then
        if p:FindFirstChild("clown") then
            p:Destroy()
        end
    end
end
-- Anti Autofarm Bypass
for o,p in pairs(ws:GetChildren()) do
    if p:IsA("Part") then
        if p:FindFirstChild("Texture") then
            if p.Texture.Texture == "rbxassetid://724900870" then
                if p.Mass == 18944.63671875 then
                   p:Destroy()
                end
            end
        end
        if p:FindFirstChild("TouchInterest") then
            p.Name = "Potential"
            p.CanCollide = false
            p.CanTouch = false
            p:Destroy()
        end
    end
end

local Hook; -- Store the old hook to return vital functions later
Hook = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(self, ...)
  local args = {...} -- store argument
  if getnamecallmethod() == "InvokeServer" and self.Name == "Kick"   then
      return wait(9e9)
  end
  return Hook(self, ...) 
end))

--Base Variables
local client = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = client:GetMouse()
local players = game:GetService("Players")
local rs = game:GetService("RunService")
local uis = game:GetService("UserInputService")


local mychar = game.Players.LocalPlayer.Character

local oldmoney = game:GetService("Players").LocalPlayer.Settings.Character.Settings.Cash.Value

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
    Name = "GuraHub Reborn | Miami Florida",
    LoadingTitle = "GuraHub Reborn Welcomes you.",
    LoadingSubtitle = "by Awaken/lobox",
    KeySystem = true,
    KeySettings = {
        Title = "GuraHub",
        Subtitle = "Key System",
        Note = "Welcome to GuraHub Reborn",
        Key = "GuraHub1213412412" and "Awaken"
    }
})

local Player = Window:CreateTab("Player Locals")

local Section = Player:CreateSection("Player Locals")

Player:CreateButton({
	Name = "Invisible",
	Callback = function()
        lp = game:GetService("Players").LocalPlayer;
     if lp.Character:FindFirstChild("LowerTorso") and  lp.Character:FindFirstChild("UpperTorso") then
        if lp.Character.LowerTorso:FindFirstChild("Root") and lp.Character.UpperTorso:FindFirstChild("Waist") then
            if getgenv().Autofarm == true then
                getgenv().Autofarm = false
                wasautofarming = true
            elseif getgenv().Autofarm == false then
                wasautofarming = false
            end
            oldpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            wait(1)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.SpawnRoom.SpawnLocation.CFrame*CFrame.new(0,5,0)
            wait(1)
            local plr = lp
            local character = plr.Character
            local hrp = character.HumanoidRootPart
            local old = hrp.CFrame

            if character.LowerTorso:FindFirstChild("Root") then
                local newroot = character.LowerTorso.Root:Clone()
                hrp.Parent = workspace
                character.PrimaryPart = hrp
                character:MoveTo(Vector3.new(old.X,9e9,old.Z))
                hrp.Parent = character
                task.wait(0.5)
                newroot.Parent = hrp
                wait(1)
                hrp.CFrame = old
                wait(0.2)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = old
                for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.Transparency = 0.8
                        v.CanCollide = true
                    end
                end  
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldpos
                Rayfield:Notify("Gura Hub :", "You are now Invisible",10559192727)
            else
                Rayfield:Notify("Gura Hub :", "You are already Invisible",10559192727)
            end

            if wasautofarming == true then
                getgenv().Autofarm = true
                -- Re put the can collide
            elseif wasautofarming == false then
                -- Void
            end
        else
            Rayfield:Notify("Gura Hub :", "You are already Invisible")
        end
     elseif not lp.Character:FindFirstChild("LowerTorso") and  lp.Character:FindFirstChild("UpperTorso") then
        Rayfield:Notify("Gura Hub :", "Unable to reach the character",10559192727)
     end 
     Rayfield:Notify("Gura Hub :", "Now Invisible | People dont see ur tag",10559192727)
    end,
})

Player:CreateButton({
	Name = "Headless [Also Remove Tag]",
	Callback = function()
        a = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Head")
        hrp = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
        old = hrp.CFrame
        wait(0.1)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.SpawnRoom.SpawnLocation.CFrame*CFrame.new(0,5,0)
        wait()
        me = game:GetService("Players").LocalPlayer.Character
        local head = me.Head
        head.Archivable = true
        local headc = head:Clone()
        headc.Parent = me
        head:Destroy()
        local w = Instance.new("Weld", headc)
        w.Part0 = headc
        w.Part1 = me.Head
        headc.Transparency = 1
        if me.Head:FindFirstChild("face") then
            me.Head.face:Destroy()
        end
        if me.Head:FindFirstChild("MaleFace2") then
            me.Head.MaleFace2:Destroy()
        end
        
        hrp.CFrame = old
        Rayfield:Notify("MonkeyAss Eas", "Hi monkey ur headless ggs",10559192727)
	end,
})


Player:CreateToggle({
	Name = "Inf Hunger",
	CurrentValue = false,
	Callback = function(value)
        getgenv().InfHunger = value
        while getgenv().InfHunger do
            es = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Handler")
            if es then
                es.Values.Hunger.Value = 100
                wait(0.8)
            end
        end
	end,
})

Player:CreateToggle({
	Name = "Inf Thrist",
	CurrentValue = false,
	Callback = function(value)
     getgenv().Infthirst = value
     while getgenv().Infthirst do
        es = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Handler")
        if es then
            es.Values.Thirst.Value = 100
            wait(0.8)
        end
     end
    end,
})

Player:CreateToggle({
	Name = "No Jump Cooldown",
	CurrentValue = false,
	Callback = function(value)
        getgenv().NoJumpCD = value
        while getgenv().NoJumpCD do
            sea = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("JumpCooldown")
            if sea then
                game:GetService("Players").LocalPlayer.PlayerGui.JumpCooldown.Disabled = true
            end
            wait(0.8)
        end
        if value == false then
            game:GetService("Players").LocalPlayer.PlayerGui.JumpCooldown.Disabled = false
        end
    end,
})


Player:CreateToggle({
	Name = "Inf Stamina",
	CurrentValue = false,
	Callback = function(value)
		getgenv().InfStamina = value
     while getgenv().InfStamina do
		sus = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Handler")
        if sus then
            sus.Values.MaxStamina.CurrentStamina.Value = 100
			sus.Values.MaxStamina.Value = 100
            wait(0.8)
        end
	 end
    end,
})

Player:CreateLabel("Swey Suii Speed")

Player:CreateSlider({
	Name = "WalkSpeed",
	Range = {0, 250},
	Increment = 10,
	Suffix = "SpeedValue",
	CurrentValue = 10,
	Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    end,
})

Player:CreateSlider({
	Name = "JumpPower",
	Range = {0, 250},
	Increment = 10,
	Suffix = "JumpValue",
	CurrentValue = 10,
	Callback = function(value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
    end,
})

local tp = Window:CreateTab("Teleports")

local Section = tp:CreateSection("Teleports")

tp:CreateParagraph({Title = "Teleports", Content = "So if you got caught teleporting not on us so if safe method please be invisible first if you dont wana get caught"})

local players = game.Players:GetChildren()
local PlayerList = {}

for i,v in pairs(players) do
    table.insert(PlayerList,v.Name)
end

tp:CreateDropdown({
    Name = 'Teleport to Player',
	Options = PlayerList,
	CurrentOption = "Select Player",
	Callback = function(value)
        mychar = game.Players.LocalPlayer.Character
        if mychar:FindFirstChild("HumanoidRootPart") and game:GetService("Workspace").Players:FindFirstChild(value) then
            if game:GetService("Workspace").Players[value]:FindFirstChild("HumanoidRootPart") then
                mychar.HumanoidRootPart.CFrame = game:GetService("Workspace").Players[value].HumanoidRootPart.CFrame
            end
        end
    end,
})

tp:CreateDropdown({
	Name = "Green Zones",
	Options = {"Gun Store", "Harolds", "Bank"},
	CurrentOption = "Select Store",
	Callback = function(Option)
        if Option == "Gun Store" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(85, 8.03733253, -76.6575699, 1, 0, 0, 0, 1, 0, 0, 0, 1)}):Play()
        elseif Option == "Harolds" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(231.812759, 8.03733253, -62.2232018, 1, 0, 0, 0, 1, 0, 0, 0, 1)}):Play()
        elseif Option == "Bank" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(93.3074951, 11.1943741, 319.916443, 1, 0, 0, 0, 1, 0, 0, 0, 1)}):Play()
        end
	end,
})


tp:CreateDropdown({
	Name = "Illegal NPC",
	Options = {"Melee NPC", "illegal GunDealer NPC"},
	CurrentOption = "Select Illegal NPC",
	Callback = function(Option)
        if Option == "Melee NPC" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(68.8914261, 7.070611, 79.849968, -0.00748701114, -8.25138855e-08, 0.999971986, -5.49994716e-08, 1, 8.21044068e-08, -0.999971986, -5.43832144e-08, -0.00748701114)}):Play()
        elseif Option == "illegal GunDealer NPC" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(247.889481, 6.53366661, 1054.17273, -0.924062073, 1.12401501e-08, 0.382242441, 2.82729502e-08, 1, 3.89433765e-08, -0.382242441, 4.67932182e-08, -0.924062073)}):Play()
        end
	end,
})

tp:CreateDropdown({
	Name = "Shop's",
	Options = {"Mask Shop", "Barber Shop", "Clothe Store", "Lawa", "Tatoo Shop", "Melrose Outlet", "Car Dealership"},
	CurrentOption = "Select Shop's",
	Callback = function(Option)
        if Option == "Mask Shop" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(20.9591618, 7.19212055, 54.9365387, 0, 0, 1, 0, 1, -0, -1, 0, 0)}):Play()
        elseif Option == "Barber Shop" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(35.5687561, 9, 130.41893, 0, 0, 1, 0, 1, -0, -1, 0, 0)}):Play()
        elseif Option == "Clothe Store" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(335, 7.71928692, -124.568909, 0, 0, 1, 0, 1, -0, -1, 0, 0)}):Play()
        elseif Option == "Lawa" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(60.7309265, 9.15037537, -223.681885, 0, 0, 1, 0, 1, -0, -1, 0, 0)}):Play()
        elseif Option == "Tatoo Shop" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(227.369965, 10.5634804, -111.12468, 0, 0, 1, 0, 1, -0, -1, 0, 0)}):Play()
        elseif Option == "Melrose Outlet" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(1651.22803, 8.16531181, 26.3695946, 0.991813719, 2.69486371e-08, -0.127693146, -2.09592805e-08, 1, 4.82479656e-08, 0.127693146, -4.51766375e-08, 0.991813719)}):Play()
        elseif Option == "Car Dealership" then
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(-376.103424, 7.04724121, -530.603943, -0.345048845, 7.05419296e-08, 0.938584745, -7.75435183e-09, 1, -7.8008469e-08, -0.938584745, -3.41948478e-08, -0.345048845)}):Play()
        end
	end,
})


local Auto = Window:CreateTab("AutoFarm")

local Section = Auto:CreateSection("AutoFarm")

Auto:CreateDropdown({
	Name = "Safe Mode Method",
	Options = {"Under","Above"},
	CurrentOption = "Select Method",
	Callback = function(Option)
        getgenv().Methode = Option
	end,
})
Auto:CreateToggle({
	Name = "Safe Autofarm [RECOMMENDED]",
	CurrentValue = false,
	Callback = function(value)
        getgenv().SafeAutofarm = value
    end,
})

local function GetHaroldJob()
    if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        ws.MapStuff.Jobs.HaroldsCleaning.JobBoard.Start.ProximityPrompt.RequiresLineOfSight = false
        wait(0.2)
        game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(237.635773, 7.16408348, -49.5773392, -0.0390030034, 1.8023112e-15, -0.999239087, -9.56244062e-09, 1, 3.73249709e-10, 0.999239087, 9.56972279e-09, -0.0390030034)}):Play()
        wait(0.2)
        fireproximityprompt(ws.MapStuff.Jobs.HaroldsCleaning.JobBoard.Start.ProximityPrompt)
        wait(0.5)
    end
end

Auto:CreateToggle({
	Name = "AutoFarm Cleaning",
	CurrentValue = false,
	Callback = function(value)
        getgenv().Autofarm = value -- To turn off change the true by 'false'

        for i,v in pairs(ws.MapStuff.Jobs.HaroldsCleaning.CleaningParts:GetChildren()) do
            v.Prompt.RequiresLineOfSight = false
        end
        while getgenv().Autofarm do
            --if getgenv().AutoInvisible == true then
                ---getinvisibility()
            --end
            gui = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Harolds Cleaning Job")
            if gui then
                for i,v in pairs(ws.MapStuff.Jobs.HaroldsCleaning.CleaningParts:GetChildren()) do
                    if getgenv().Autofarm == true then -- I added it since it didnt stopped instantly if u toggle it oof on the gui
                        v.Prompt.RequiresLineOfSight = false
                        local tool = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Broom") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Broom")
                        if tool then
                            humanoid = game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid")
                            humanoid:EquipTool(tool)    
                            if v.Handler.Cleaned.Value == false then
                                hum = game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                if hum then
                                    if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored == false then
                                        if getgenv().SafeAutofarm == true then
                                            pe = v.Position
                                            --fireproximityprompt(v.Prompt)
                                            wait(0.1)
                                            if getgenv().SafeAutofarm == true then
                                                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                                    if getgenv().Methode == "Under" then
                                                        wait(0.1)
                                                        game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(pe)*CFrame.new(0,-8,0)}):Play()
                                                        wait(0.1)
                                                        fireproximityprompt(v.Prompt)
                                                    elseif getgenv().Methode == "Above" then
                                                        wait(0.1)
                                                        game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(pe)*CFrame.new(0,3,0)}):Play()
                                                        --game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(2,0,0)
                                                        --wait(0.5)
                                                        wait(0.2)
                                                        fireproximityprompt(v.Prompt)
                                                        wait(0.1)
                                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,17,0)
                                                    end
                                                end
                                            end
                                        elseif not getgenv().SafeAutofarm == true then
                                            pe = v.Position
                                            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(pe)*CFrame.new(0,3,0)}):Play()
                                            --game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(2,0,0)
                                            --wait(0.5)
                                            wait(0.2)
                                            fireproximityprompt(v.Prompt)
                                        elseif getgenv().SafeAutofarm == nil then
                                            pe = v.Position
                                            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(pe)*CFrame.new(0,3,0)}):Play()
                                            --game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(2,0,0)
                                            --wait(0.5)
                                            wait(0.2)
                                            fireproximityprompt(v.Prompt)
                                        end
                                    elseif game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored == true then
                                        --warn("User Is In Interaction!")
                                    end
                                end
                            end
                        elseif not tool then
                            --warn("Job Reseted, Player died [NO BROOM DETECTED]")
                            GetHaroldJob()
                        end
                    end
                    wait(0.5)
                end
            elseif game:GetService("Players").LocalPlayer.Settings.Character.Job.Value == "Jobless" then
                GetHaroldJob()
            elseif game:GetService("Players").LocalPlayer.Settings.Character.Job.Value == "None" then
                GetHaroldJob()
            elseif not gui then
                GetHaroldJob()
            else
                --warn("Job Must Be Jobless or Harolds Cleaning Job [UNKNOW JOB DETECTED] : "..game:GetService("Players").LocalPlayer.Settings.Character.Job.Value.."")
                GetHaroldJob()
                --warn("Trying to get Harolds Cleaning Job!")
            end
            wait(1)
        end
    end,
})

local LabelMoney = Auto:CreateLabel("Money: 0")

spawn(function()
    while wait(1) do
        local currentmoney = game:GetService("Players").LocalPlayer.Settings.Character.Settings.Cash.Value - oldmoney
        LabelMoney:Set(("Earned Money: %s"):format(currentmoney))
    end
end)

Auto:CreateButton({
	Name = "Rejoin ",
	Callback = function()
        local tpservice= game:GetService("TeleportService")
        local plr = game.Players.LocalPlayer
    
        tpservice:Teleport(game.PlaceId, plr)
	end,
})

local combo = Window:CreateTab("Combat")

local Section = combo:CreateSection("Combat")

getgenv().uselocalplayer = false 
getgenv().filluseteamcolor = false 
getgenv().outlineuseteamcolor = false 
getgenv().fillcolor = Color3.new(0, 0, 0) 
getgenv().outlinecolor = Color3.new(1, 1, 1) 
getgenv().filltrans = 0 
getgenv().outlinetrans = 0 


combo:CreateToggle({
	Name = "Hightlight ESP",
	CurrentValue = false,
	Callback = function(value)
        getgenv().enabled = value
        getgenv().outlinecolor =  Color3.new(255,255,255)
        local holder = game.CoreGui:FindFirstChild("ESPHolder") or Instance.new("Folder")
        if enabled == false then
            holder:Destroy()
        end
        if holder.Name == "Folder" then
            holder.Name = "ESPHolder"
            holder.Parent = game.CoreGui
        end
        
        if uselocalplayer == false and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
            holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
        end
        

        while getgenv().enabled do
            task.wait()
            for _,v in pairs(game.Players:GetChildren()) do
                local chr = v.Character
                if chr ~= nil then
                    local esp = holder:FindFirstChild(v.Name) or Instance.new("Highlight")
                    esp.Name = v.Name
                    if uselocalplayer == false and esp.Name == game.Players.LocalPlayer.Name then
                        else
                    esp.Parent = holder
                    if filluseteamcolor then
                        esp.FillColor = v.TeamColor.Color
                    else
                        esp.FillColor = fillcolor 
                    end
                    if outlineuseteamcolor then
                        esp.OutlineColor = v.TeamColor.Color
                    else
                        esp.OutlineColor = outlinecolor    
                    end
                    esp.FillTransparency = filltrans
                    esp.OutlineTransparency = outlinetrans
                    esp.Adornee = chr
                    esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    end
                end
            end
        end
    end,
})

combo:CreateToggle({
	Name = "Outliner Transparency",
	CurrentValue = false,
	Callback = function(value)
        if value == true then
            getgenv().outlinetrans = 0
        elseif value == false then
            getgenv().outlinetrans = 1
        end
    end,
})

combo:CreateToggle({
	Name = "Color Transparency",
	CurrentValue = false,
	Callback = function(value)
        if value == true then
            getgenv().filltrans = 0
        elseif value == false then
            getgenv().filltrans = 1
        end
    end,
})

combo:CreateButton({
	Name = "Active Aimbot",
	Callback = function()
        local Camera = workspace.CurrentCamera
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")
        local TweenService = game:GetService("TweenService")
        local LocalPlayer = Players.LocalPlayer
        local Holding = true
       
        _G.AimbotEnabled = true
        _G.TeamCheck = value 
        _G.AimPart = aimpart and "Head"
        _G.Sensitivity = 0 
       
        _G.CircleSides = 64
        _G.CircleColor = Color3.fromRGB(255, 255, 255) 
        _G.CircleTransparency = 1 
        _G.CircleRadius = 20 or value 
        _G.CircleFilled = false 
        _G.CircleVisible = true 
        _G.CircleThickness = 1 
       
        local FOVCircle = Drawing.new("Circle")
        FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        FOVCircle.Radius = _G.CircleRadius
        FOVCircle.Filled = _G.CircleFilled
        FOVCircle.Color = _G.CircleColor
        FOVCircle.Visible = _G.CircleVisible
        FOVCircle.Radius = _G.CircleRadius
        FOVCircle.Transparency = _G.CircleTransparency
        FOVCircle.NumSides = _G.CircleSides
        FOVCircle.Thickness = _G.CircleThickness
       
        local function GetClosestPlayer()
           local MaximumDistance = _G.CircleRadius
           local Target = nil
       
           for _, v in next, Players:GetPlayers() do
               if v.Name ~= LocalPlayer.Name then
                   if _G.TeamCheck == true then
                       if v.Team ~= LocalPlayer.Team then
                           if v.Character ~= nil then
                               if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                   if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                       local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                       local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                                       
                                       if VectorDistance < MaximumDistance then
                                           Target = v
                                       end
                                   end
                               end
                           end
                       end
                   else
                       if v.Character ~= nil then
                           if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                               if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                   local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                   local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                                   
                                   if VectorDistance < MaximumDistance then
                                       Target = v
                                   end
                               end
                           end
                       end
                   end
               end
           end
       
           return Target
        end
          
        UserInputService.InputBegan:Connect(function(Input)
           if Input.UserInputType == Enum.UserInputType.MouseButton2 then
               Holding = true
           end
       end)
       
        UserInputService.InputEnded:Connect(function(Input)
           if Input.UserInputType == Enum.UserInputType.MouseButton2 then
               Holding = false
           end
        end)
       
        RunService.RenderStepped:Connect(function()
           FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
           FOVCircle.Radius = _G.CircleRadius
           FOVCircle.Filled = _G.CircleFilled
           FOVCircle.Color = _G.CircleColor
           FOVCircle.Visible = _G.CircleVisible
           FOVCircle.Radius = _G.CircleRadius
           FOVCircle.Transparency = _G.CircleTransparency
           FOVCircle.NumSides = _G.CircleSides
           FOVCircle.Thickness = _G.CircleThickness
       
           if Holding == true and _G.AimbotEnabled == true then
               TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[_G.AimPart].Position)}):Play()
           end
        end)       
        Rayfield:Notify("Gura Hub","Aimlock Activated",10559192727)
        wait(0.5)
        Rayfield:Notify("Gura Hub","Hold Right Mouse Button to lock",10559192727)       
	end,
})

combo:CreateSlider({
	Name = "Fov Radius",
	Range = {0, 100},
	Increment = 10,
	Suffix = "How Big you want?",
	CurrentValue = 20,
	Callback = function(value)
		_G.CircleRadius = value
	end,
})

combo:CreateDropdown({
	Name = "Select AimbotPart",
	Options = {"Head", "HumanoidRootPart", "Torso", "Right Arm", "Left Arm"},
	CurrentOption = "Select Part",
	Callback = function(Option)
        aimpart = Option
        Rayfield:Notify("Seleted AimPart:", aimpart,10559192727)
	end,
})

combo:CreateToggle({
	Name = "TeamCheck",
	CurrentValue = false,
	Callback = function(value)
        if value == true then
            _G.TeamCheck = true
        elseif value == false then
            _G.TeamCheck = false
        end
	end,
})

combo:CreateToggle({
	Name = "BigHead",
	CurrentValue = false,
	Callback = function(value)
        if value == true then
            for i,v in pairs(game:GetService("Players"):GetChildren()) do
               if v.Name == game:GetService("Players").LocalPlayer.Name then
               else
               if v.Character:FindFirstChild("Head") then
                       v.Character.Head.Size = Vector3.new(5,5,5)
                   end 
               end
            end
           wait()
        elseif value == false then
           for i,v in pairs(game:GetService("Players"):GetChildren()) do
               if v.Name == game:GetService("Players").LocalPlayer.Name then
               else
               if v.Character:FindFirstChild("Head") then
                       v.Character.Head.Size = Vector3.new(1,1,1)
                   end 
               end
           end
       end
	end,
})

local Dupe = Window:CreateTab("Dupe Money")

local Section = Dupe:CreateSection("Dupe Money")

Dupe:CreateToggle({
	Name = "Dupe",
	CurrentValue = false,
	Callback = function(value)
		getgenv().dupe = value
		while getgenv().dupe do 
			if getgenv().dupe == false then
				wait()
			elseif getgenv().dupe == true then
			end
		end
	end,
})

Dupe:CreateParagraph({Title = "Dupe Steps", Content = "Step 1:".."You must have cash and able to transfer to your alt or friend."})
Dupe:CreateParagraph({Title = "-", Content = "Step 2:".."After you transfer to your alt or anyother account Run the dupe"})
Dupe:CreateParagraph({Title = "Lastly", Content = "Step 3:".."Dont close Roblox window stay ingame then join a random server via roblox server browser"})

local Troll = Window:CreateTab("Trolling")

local Section = Troll:CreateSection("Troll Deez Nuts")

Troll:CreateInput({
	Name = "Stats Checker |",
	PlaceholderText = "Enter Player Username",
	RemoveTextAfterFocusLost = false,
	Callback = function(t)
        if game:GetService("Players"):FindFirstChild(t) then
            rconsoleprint("\n -----------------Player Name-----------------")
            rconsoleprint("\n Player Name:"..game:GetService("Players")[t].Name)
            rconsoleprint("\n -----------------CurrentCar-----------------")
            rconsoleprint("\n CurrentCar:"..game:GetService("Players")[t].CurrentCar.value)
            rconsoleprint("\n -----------------Player Cash-----------------")
            rconsoleprint("\n CurrentCash:"..game:GetService("Players")[t].Settings.Character.Settings.Cash.value)
            rconsoleprint("\n -----------------Player backpack-----------------")
            for i,v in pairs(game.Players[t].Backpack:GetChildren()) do
                if v:IsA("Tool") then
                    rconsoleprint('\n'..v.Name)
                end
            end
        else
         Rayfield:Notify("Gura Hub :", "Unable to find the player")
        end
	end,
})

Troll:CreateDropdown({
	Name = "Kick Player",
	Options = PlayerList,
	CurrentOption = "Select Player",
	Flag = "None",
	Callback = function(Option)
        victim = Option
        if game:GetService("Workspace").Cars:FindFirstChild(game.Players.LocalPlayer.Name.."'s Vehicle") then
            if game:GetService("Workspace").Players:FindFirstChild(victim) then
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                    if game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
                        Library:CreateNotification("Gura Hub","You must be on your car!", 3)
                    else
                        myseatedpart = game.Players.LocalPlayer.Character.Humanoid.SeatPart
                        victimCF = game:GetService("Workspace").Players[victim].HumanoidRootPart.Position
                        --if myseatedpart.Parent:GetAttribute("Price") then
                            local MyCar = game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent
                            MyCar:SetPrimaryPartCFrame(CFrame.new(victimCF)*CFrame.new(0,0,-2))
                        --end
                        wait(0.2)
                        MyCar:SetPrimaryPartCFrame(CFrame.new(224, -5, -62))
                        wait(1)
                        game.Players.LocalPlayer.Character.Humanoid.Sit = false
                        wait(0.1)
                        game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(-362, 7, -520)}):Play()
                        wait(0.3)
                        fireproximityprompt(game:GetService("Workspace").MapStuff.LowEndDealership.CSpawn.ProximityPrompt)
                        Library:CreateNotification("Gura Hub","If the player isnt kicked then its a script user!", 3)
                    end
                end
            else
               Rayfield:Notify("Gura Hub","No victim Founded!")
            end
        else
            Rayfield:Notify("Gura Hub","No Car Detected!")
        end
	end,
})

local Misc = Window:CreateTab("Misc")

local Section = Misc:CreateSection("Misc")

Misc:CreateToggle({
	Name = "Auto Pick Cash",
	CurrentValue = false,
	Callback = function(value)
		getgenv().AutoPickCask = value

		while getgenv().AutoPickCask do
			wait(1)
			for _, pskov in pairs(game.Workspace:GetChildren()) do
				if not getgenv().AutoPickCask then break 
				end;
				if pskov:IsA("Tool") and pskov:FindFirstChild("Handle") then
					if mychar.Character and mychar.Character:FindFirstChild("HumanoidRootPart")  then
						firetouchinterest(game.Players.LocalPlayer.Character.Head, pskov.Handle, 0)
					end
				end
			end
			wait(2)
		end
	end,
})

Misc:CreateInput({
	Name = "Test Webhook",
	PlaceholderText = "Enter Webhook",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		local webhookcheck = identifyexecutor()
	 
	 local url = (Text)
	 local data = {
		["content"] = "@everyone",
		["embeds"] = {
			{
				["title"] = "Test Webhook GuraHub Mod Detection System",
				["description"] = "TestWebhook"..webhookcheck,
				["type"] = "rich",
				["color"] = tonumber(0x7269da),
			}
		}
	 }
	 local newdata = game:GetService("HttpService"):JSONEncode(data)
 
	 local headers = {
		["content-type"] = "application/json"
	 }
	 request = http_request or request or HttpPost or syn.request
	 local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
	 request(abcdef)
	end,
})


Misc:CreateInput({
	Name = "Enter Webhook",
	PlaceholderText = "Enter Webhook",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		url2 = (Text) 
	end,
})

Misc:CreateButton({
	Name = "Mod Detection",
	CurrentValue = false,
	Callback = function(value)
		if url2 == nil then
			Rayfield:Notify("Warning","Enter Webhook First")
			task.stop()
		end
		Rayfield:Notify("Gura Hub","Runing Mod Detection")
        local webhookcheck = identifyexecutor()
	 
        local url = url2 
        local data = {
           ["content"] = "@everyone",
           ["embeds"] = {
               {
                   ["title"] = "GuraHub:Mod Detection System Active",
                   ["description"] = "Active | Using Executer: "..webhookcheck,
                   ["type"] = "rich",
                   ["color"] = tonumber(0x7269da),
               }
           }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
           ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
		local function webhook(staffname)
			local data = {
				 ["content"] = "@everyone",
				 ["embeds"] = {{
					 ["title"] = "Staff Detected!",
					 ["description"] = "A staff member joined the game you were in.",
					 ["type"] = "rich",
					 ["color"] = tonumber(0xffffff),
					 ["fields"] = {
						 {
							 ["name"] = "Staff Name",
							 ["value"] = staffname,
							 ["inline"] = true
						 },
					 }
				 }}
			 }
		 local response = (syn and syn.request or http_request or http.request) {
		 url = url2,
		 Method = "POST",
		 Headers = {
		 ["Content-Type"] = "application/json"
		 },
		 Body = game:GetService("HttpService"):JSONEncode(data)
		 }
		 end
		 local function staffcheckloop()
		 for i,v in pairs(game.Players:GetPlayers()) do
			 if v:GetRoleInGroup(4788489) == "Owner" or v:GetRoleInGroup(4788489) == "Modeler" or v:GetRoleInGroup(4788489) == "Co-owner" or v:GetRoleInGroup(4788489) == "Admin" then
				 webhook(v.Name)
			 end
		 end
		 end
		 staffcheckloop()
		 game.Players.PlayerAdded:Connect(function(player)
				 if player:GetRoleInGroup(4788489) == "Owner" or player:GetRoleInGroup(4788489) == "Modeler" or player:GetRoleInGroup(4788489) == "Co-owner" or player:GetRoleInGroup(4788489) == "Admin" then
				 webhook(player)
			 end
		 end)     
	end,
})

Misc:CreateToggle({
	Name = "Open Chat",
	CurrentValue = false,
	Callback = function(value)
        V = value
        if V == true then
            local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
            ChatFrame.ChatChannelParentFrame.Visible = true
            ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), ChatFrame.ChatChannelParentFrame.Size.Y)
        elseif V == false then
            local ChatFrame = game.Players.LocalPlayer.PlayerGui.Chat.Frame
            ChatFrame.ChatChannelParentFrame.Visible = false
            ChatFrame.ChatBarParentFrame.Position = ChatFrame.ChatChannelParentFrame.Position + UDim2.new(0, 0, 0, 0)
        end
	end,
})

Misc:CreateButton({
	Name = "Anti Lag",
	Callback = function()
		local a = ws.Terrain
    a.WaterWaveSize = 0
    a.WaterWaveSpeed = 0
    a.WaterReflectance = 0
    a.WaterTransparency = 0
    game.Lighting.GlobalShadows = false
    task.spawn(function()
        LPH_JIT_ULTRA(function() 
            for i,v in pairs(ws:GetDescendants()) do
                if v:IsA("Part") then
                    v.Material = "Plastic"
                end
            end
        end)()
    end)
	end,
})

Misc:CreateToggle({
	Name = "Auto Day",
	CurrentValue = false,
	Callback = function(value)
        getgenv().Autoday = value
        if value then
            task.spawn(function()
                while getgenv().Autoday do
                    game.Lighting.ClockTime.value = 12
                wait() 
                end
            end)
        end
	end,
})

Misc:CreateToggle({
	Name = "Anti Hurt Blur",
	CurrentValue = false,
	Callback = function(value)
        getgenv().antigunblur = value

        while getgenv().antigunblur do
            lightgunblur = game:GetService("Lighting"):FindFirstChild("GunBlur")
            if lightgunblur then
                game:GetService("Lighting").GunBlur.Enabled = false
            end
        wait() 
        end
	end,
})

Misc:CreateToggle({
	Name = "Anti UC",
	CurrentValue = false,
	Callback = function(value)
        getgenv().AntiUC= value

        while getgenv().AntiUC do
            UC_V = game:GetService("Lighting"):FindFirstChild("UC")
            if UC_V then
                game:GetService("Lighting").UC.Enabled = false
            end
        wait() 
        end
	end,
})

Misc:CreateToggle({
	Name = "Anti Gun Blur",
	CurrentValue = false,
	Callback = function(value)
        getgenv().antiPermHurtBlur = value

        while getgenv().antiPermHurtBlur do
            lightPermHurtBlur = game:GetService("Lighting"):FindFirstChild("PermHurtBlur")
            if lightPermHurtBlur then
                game:GetService("Lighting").PermHurtBlur.Enabled = false
            end
        wait() 
        end
	end,
})

Misc:CreateButton({
	Name = "Destroy UI",
	Callback = function()
		Rayfield:Destroy()
	end,
})

Misc:CreateButton({
	Name = "Exit UI",
	Callback = function()
        Rayfield:Notify('Exit Gui', 'Closing in 2 Sec')
        wait(1)
        game:GetService("CoreGui")["Key"]:Destroy()
        wait(1)
        -- 
        getgenv().NoJumpCD = false
        getgenv().InfStamina = false
        getgenv().ActiveJump = false
        getgenv().ActiveJump = false
    
        --
        getgenv().SafeAutofarm = false
        --
        getgenv().Autofarm = false
        getgenv().WALKINGAUTOFARM = false
        getgenv().AutoPizzaJob = false
        --
        getgenv().Autoday = false
        getgenv().antigunblur = false
        getgenv().antiPermHurtBlur = false
        getgenv().AntiUC = false
	end,
})
